# Default values for multi-cloud-app
# This is a YAML-formatted file.

monitoring:
  enabled: true
  prometheus:
    retention: 15d
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 2
        memory: 4Gi
    storage:
      size: 100Gi
    alertmanager:
      enabled: true
      slack_api_url: ""
      pagerduty_url: ""
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
  grafana:
    adminPassword:
      secretName: grafana-admin-secret
      secretKey: admin-password
    persistence:
      enabled: true
      size: 10Gi
    dashboards:
      default: true
    plugins:
      - grafana-piechart-panel
      - grafana-clock-panel
    securityContext:
      runAsNonRoot: true
      runAsUser: 472
      fsGroup: 472

logging:
  enabled: true
  elasticsearch:
    replicas: 3
    resources:
      requests:
        cpu: 1
        memory: 2Gi
      limits:
        cpu: 2
        memory: 4Gi
    storage:
      size: 100Gi
    securityContext:
      runAsUser: 1000
      fsGroup: 1000
  fluentd:
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    securityContext:
      runAsUser: 100
      fsGroup: 101
  kibana:
    resources:
      requests:
        cpu: 500m
        memory: 1Gi
      limits:
        cpu: 1
        memory: 2Gi
    securityContext:
      runAsUser: 1000
      fsGroup: 1000

serviceMesh:
  enabled: true
  istio:
    components:
      pilot:
        enabled: true
      egressGateways:
        enabled: true
      ingressGateways:
        enabled: true
    global:
      proxy:
        resources:
          requests:
            cpu: 100m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
      mtls:
        enabled: true
        mode: STRICT
      meshPolicy:
        mtlsMode: STRICT

application:
  replicaCount: 3
  image:
    repository: nginx
    tag: "1.23.3-alpine"
    pullPolicy: IfNotPresent
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  autoscaling:
    enabled: true
    minReplicas: 3
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80
  
  nodeSelector: {}
  tolerations: []
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app
              operator: In
              values:
              - multi-cloud-app
          topologyKey: kubernetes.io/hostname

  ingress:
    enabled: true
    className: "nginx"
    annotations:
      kubernetes.io/ingress.class: nginx
      nginx.ingress.kubernetes.io/ssl-redirect: "true"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
      cert-manager.io/cluster-issuer: "letsencrypt-prod"
      nginx.ingress.kubernetes.io/rate-limit: "100"
    hosts:
      - host: chart-example.local
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: chart-example-tls
        hosts:
          - chart-example.local

  persistence:
    enabled: true
    accessMode: ReadWriteOnce
    size: 10Gi
    storageClass: ""

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 2000
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  networkPolicy:
    enabled: true
    policyTypes:
      - Ingress
      - Egress
    ingressRules:
      - from:
          - namespaceSelector:
              matchLabels:
                name: ingress-nginx
        ports:
          - protocol: TCP
            port: 80
    egressRules:
      - to:
          - namespaceSelector:
              matchLabels:
                name: monitoring
        ports:
          - protocol: TCP
            port: 9090
      - to:
          - namespaceSelector:
              matchLabels:
                name: logging
        ports:
          - protocol: TCP
            port: 9200

# Security enhancements
security:
  podSecurityPolicy:
    enabled: true
  networkPolicies:
    enabled: true
    defaultDeny: true
  falco:
    enabled: true
    rules:
      - privilege_escalation
      - suspicious_network_activity
      - file_integrity_monitoring

# Certificate management
certificates:
  enabled: true
  certManager:
    enabled: true
    clusterIssuer: letsencrypt-prod
    autoRotation: true
    renewBefore: 720h # 30 days

# Backup and disaster recovery
backup:
  enabled: true
  velero:
    enabled: true
    schedule: "0 1 * * *"
    retention: "720h" # 30 days
